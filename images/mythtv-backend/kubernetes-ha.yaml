---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME-sync
  labels:
    app.kubernetes.io/name: $SERVICE_NAME-sync
spec:
  clusterIP: None
  ports:
  - { port: 22, targetPort: 22 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME-sync
    release: "0.1"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME-sync
    release: "0.1"
  name: $SERVICE_NAME-sync
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME-sync
      release: "0.1"
  serviceName: $SERVICE_NAME-sync
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME-sync
        release: "0.1"
    spec:
      containers:
      - name: $SERVICE_NAME-sync
        env:
        - name: PUBKEY1
          valueFrom:
            secretKeyRef:
              name: $DATA_SYNC_SECRET
              key: pubkey1
        - name: PUBKEY2
          valueFrom:
            secretKeyRef:
              name: $DATA_SYNC_SECRET
              key: pubkey2
        - { name: SYNC_INTERVAL, value: "240" }
        - { name: TZ, value: $TZ }
        image: $REGISTRY_URI/data-sync:$VERSION_DATA_SYNC
        ports:
        - containerPort: 22
        resources:
          limits:
            memory: 1024Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: archive
          mountPath: /root/.unison
        - name: config
          mountPath: /etc/unison.d/common.prf
          subPath: common.prf
        - mountPath: /etc/ssh
          name: etc
        - mountPath: /var/log/unison
          name: logs
        - mountPath: /var/data-sync/data
          name: data
        - mountPath: /var/data-sync/home
          name: share
          subPath: $SERVICE_NAME/home
        - mountPath: /run/secrets/data-sync-sshkey1
          name: sshkeys
          subPath: sshkey1
        - mountPath: /run/secrets/data-sync-sshkey2
          name: sshkeys
          subPath: sshkey2
      dnsConfig:
        options: [ name: ndots ]
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      nodeSelector:
        service.mythtv-backend: allow
      volumes:
      - name: config
        configMap:
          name: data-sync
      - name: data
        hostPath: { path: $MYTHTV_VOL_PATH }
      - name: share
        hostPath: { path: $PATH_SHR }
      - name: sshkeys
        secret:
          secretName: $DATA_SYNC_SECRET
      - name: logs
        hostPath: { path: $K8S_VOLUMES_PATH/sync-logs/$SERVICE_NAME }
  volumeClaimTemplates:
  - metadata:
      name: archive
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
  - metadata:
      name: etc
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KEEPALIVED_COMMAND_LINE_ARGUMENTS
          value: --dump-conf
        image: osixia/keepalived:$VERSION_KEEPALIVED
        securityContext:
          capabilities:
            add: [ NET_ADMIN ]
        volumeMounts:
        - mountPath: /usr/local/etc/keepalived
          name: etc
      hostNetwork: true
      nodeSelector:
        service.mythtv-backend: allow
      serviceAccountName: $K8S_NAMESPACE-privileged
      volumes:
      - name: etc
        configMap:
          name: $SERVICE_NAME
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: $SERVICE_NAME
data:
  keepalived.conf: |
    global_defs {
      enable_script_security
    }
    vrrp_script chk_port {
      script "/bin/busybox /usr/bin/nc -z localhost 6549"
      fall 3
      interval 20
      user nobody
      rise 1
      weight 2
    }
    vrrp_instance VI_1 {
      interface $SUBNET1_INTERFACE
      priority 150
      track_script {
        chk_port
      }
      virtual_ipaddress {
        $MYTHTV_IP
      }
      virtual_router_id 151
    }
