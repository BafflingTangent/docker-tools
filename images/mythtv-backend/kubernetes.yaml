---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: DBNAME, value: $DB_MYTHTV }
        - { name: DBSERVER, value: $DB_HOST }
        - { name: LOCALHOSTNAME, value: $HOSTNAME_MYTHTV }
        - { name: TZ, value: $TZ }
        image: $REGISTRY_URI/$SERVICE_NAME:$VERSION_MYTHTV_BACKEND
        ports:
        - { containerPort: 1900, protocol: UDP }
        - containerPort: 6543
        - containerPort: 6544
        - containerPort: 6549
        - containerPort: 6760
        resources:
          limits:
            memory: 2048Mi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - name: apache-log
          mountPath: /var/log/apache2
        - name: data
          mountPath: /var/mythdata
        - name: share
          mountPath: /home/mythtv
          subPath: $SERVICE_NAME/home
        - name: videos
          mountPath: /var/mythtv/videos
          readOnly: true
        - name: mythposters
          mountPath: /var/mythtv/posters
        - name: mytharch1
          mountPath: /var/mythtv/arch1
          readOnly: true
        - name: mytharch2
          mountPath: /var/mythtv/arch2
          readOnly: true
        - name: mytharch3
          mountPath: /var/mythtv/arch3
          readOnly: true
        - name: mytharch4
          mountPath: /var/mythtv/arch4
          readOnly: true
        - name: mytharch5
          mountPath: /var/mythtv/arch5
          readOnly: true
        - name: mytharch6
          mountPath: /var/mythtv/arch6
          readOnly: true
        - name: mytharch0
          mountPath: /var/mythtv/pvr02myth
          readOnly: true
        - name: mythtv-db-password
          mountPath: /run/secrets/mythtv-db-password
          readOnly: true
          subPath: mythtv-db-password
        - name: mythtv-user-password
          mountPath: /run/secrets/mythtv-user-password
          readOnly: true
          subPath: mythtv-user-password
      hostAliases:
      - ip: 127.0.1.1
        hostnames: [ $HOSTNAME_MYTHTV ]
      hostNetwork: true
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      nodeSelector:
        service.$SERVICE_NAME: allow
      serviceAccountName: $K8S_NAMESPACE-privileged
      volumes:
      - name: apache-log
        emptyDir: {}
      - name: data
        hostPath: { path: $MYTHTV_VOL_PATH }
      - name: videos
        persistentVolumeClaim:
          claimName: videos
      - name: mythposters
        persistentVolumeClaim:
          claimName: mythposters
      - name: mytharch1
        persistentVolumeClaim:
          claimName: mytharch1
      - name: mytharch2
        persistentVolumeClaim:
          claimName: mytharch2
      - name: mytharch3
        persistentVolumeClaim:
          claimName: mytharch3
      - name: mytharch4
        persistentVolumeClaim:
          claimName: mytharch4
      - name: mytharch5
        persistentVolumeClaim:
          claimName: mytharch5
      - name: mytharch6
        persistentVolumeClaim:
          claimName: mytharch6
      - name: mytharch0
        persistentVolumeClaim:
          claimName: mytharch0
      - name: share
        hostPath: { path: $PATH_SHR }
      - name: mythtv-db-password
        secret:
          secretName: mythtv-db-password
      - name: mythtv-user-password
        secret:
          secretName: mythtv-user-password
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - name: mythweb
    port: 6760
    targetPort: 6760
  - name: status
    port: 6544
    targetPort: 6544
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: mythweb-auth
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - mythweb.$DOMAIN
  rules:
  - host: mythweb.$DOMAIN
    http:
      paths:
      - path: /
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 6760
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-totp
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-url: http://$AUTHELIA_IP/api/verify
    nginx.ingress.kubernetes.io/auth-signin: https://authtotp.$DOMAIN
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - mythweb.$DOMAIN
  rules:
  - host: mythweb.$DOMAIN
    http:
      paths:
      - path: /settings
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 6760
        pathType: Prefix
