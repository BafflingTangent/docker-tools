---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - port: 80
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: DB_HOST, value: $DB_HOST }
        - { name: DB_NAME_ADDR, value: rbaddr }
        - { name: DOMAIN, value: pioneer.ci.net }
        - { name: IMAP_SERVER, value: imap.$DOMAIN }
        - name: MESSAGE_MOTD
          value: Remote WebMail Access \&nbsp;\&nbsp; pioneer.ci.net  
        - { name: ORGANIZATION, value: Community Internet }
        - { name: SMTP_PORT, value: "25" }
        - { name: SMTP_SMARTHOST, value: smtp.$DOMAIN }
        image: $REGISTRY_LOCAL/$SERVICE_NAME:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/local/squirrelmail/attach
          name: share
          subPath: $SERVICE_NAME/attach
        - mountPath: /var/local/squirrelmail/data
          name: share
          subPath: $SERVICE_NAME/data
        - mountPath: /var/log
          name: logs
        - name: squirrelmail-db-password
          mountPath: /run/secrets/squirrelmail-db-password
          subPath: squirrelmail-db-password
      dnsConfig:
        options: [ name: ndots ]
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      volumes:
      - name: share
        hostPath: { path: $PATH_SHR }
      - name: logs
        emptyDir: {}
      - name: squirrelmail-db-password
        secret:
          secretName: squirrelmail-db-password
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - $SERVICE_NAME.$DOMAIN
  rules:
  - host: $SERVICE_NAME.$DOMAIN
    http:
      paths:
      - path: /
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-totp
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-url: http://$AUTHELIA_IP/api/verify
    nginx.ingress.kubernetes.io/auth-signin: https://authtotp.$DOMAIN
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - $SERVICE_NAME.$DOMAIN
  rules:
  - host: $SERVICE_NAME.$DOMAIN
    http:
      paths:
      - path: /src/login.php
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
