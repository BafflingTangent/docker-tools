---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  ports:
  - { port: 80, targetPort: 80 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: DB_HOST, value: $DB_HOST }
        - { name: FQDN, value: homebase.$MYDOMAIN }
        - { name: REMOTES, value: cumbre.ci.net k2.ci.net }
        - { name: SECRET_MYSQL_BACKUP, value: mysql-backup-creds }
        - { name: TZ, value: $TZ }
        image: $REGISTRY_LOCAL/$SERVICE_NAME:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/run/ilinux/arch
          name: share
          subPath: ilinux/arch
        - mountPath: /var/log
          name: logs
        - mountPath: /var/www/logs
          name: logs2
        - mountPath: /var/www/htdocs/il/app/tmp
          name: tmp
        - name: il-capi-sshkey
          mountPath: /run/secrets/il_capi_sshkey
          readOnly: true
          subPath: il_capi_sshkey
        - name: il-proxy-sshkey
          mountPath: /run/secrets/il_proxy_sshkey
          readOnly: true
          subPath: il_proxy_sshkey
        - name: il-v1-db-password
          mountPath: /run/secrets/il-v1-db-password
          readOnly: true
          subPath: il-v1-db-password
        - name: ilclient-password
          mountPath: /run/secrets/ilclient-password
          readOnly: true
          subPath: ilclient-password
        - name: ilinux-password
          mountPath: /run/secrets/ilinux-password
          readOnly: true
          subPath: ilinux-password
        - name: mysql-backup-creds
          mountPath: /run/secrets/mysql-backup-creds
          readOnly: true
          subPath: mysql-backup-creds
      dnsConfig:
        options: [ name: ndots ]
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      volumes:
      - name: share
        hostPath: { path: $PATH_SHR }
      - name: logs
        emptyDir: {}
      - name: logs2
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: il-capi-sshkey
        secret:
          secretName: il-capi-sshkey
      - name: il-proxy-sshkey
        secret:
          secretName: il-proxy-sshkey
      - name: il-v1-db-password
        secret:
          secretName: il-v1-db-password
      - name: ilclient-password
        secret:
          secretName: ilclient-password
      - name: ilinux-password
        secret:
          secretName: ilinux-password
      - name: mysql-backup-creds
        secret:
          secretName: mysql-backup-creds
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Forwarded-Server ${DOL}host;
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - homebase.$MYDOMAIN
  rules:
  - host: homebase.$MYDOMAIN
    http:
      paths:
      - path: /
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
