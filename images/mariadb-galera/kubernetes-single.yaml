---
# Non-clustered single instance
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
spec:
  type: NodePort
  ports:
  - { port: 3306, nodePort: $DB_NODEPORT, name: db }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
    release: "0.1"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
    release: "0.1"
  name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
      release: "0.1"
  serviceName: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
        release: "0.1"
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: CLUSTER_NAME, value: $SERVICE_NAME }
        - { name: DISCOVERY_SERVICE, value: "$ETCD_IP:2379" }
        - { name: CLUSTER_SIZE, value: "1" }
        image: $REGISTRY_URI/mariadb-galera:$VERSION_MARIADB_GALERA
        ports:
        - containerPort: 3306
        resources:
          limits:
            memory: 8192Mi
          requests:
            cpu: 300m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/mysql/my.cnf.d
          name: etc
        - mountPath: /etc/wsrep.cnf
          name: etc
          subPath: wsrep.cnf
        - mountPath: /var/log/mysql
          name: logs
        - mountPath: /var/lib/mysql
          name: data
        - name: mysql-root-password
          mountPath: /run/secrets/mysql-root-password
          subPath: mysql-root-password
        - name: sst-auth-password
          mountPath: /run/secrets/sst-auth-password
          subPath: sst-auth-password
      dnsConfig:
        options: [ name: ndots ]
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      volumes:
      - name: etc
        configMap:
          name: $SERVICE_NAME-etc
      - name: mysql-root-password
        secret:
          secretName: mysql-root-password
      - name: sst-auth-password
        secret:
          secretName: sst-auth-password
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 8Gi
  - metadata:
      name: logs
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: $SERVICE_NAME-etc
data:
  my.cnf: |
    # --- Deployed from kubernetes configmap ---
    #
    # For documentation see
    # https://mariadb.com/kb/en/library/server-system-variables

    [mysqld]
    #
    # * Basic Settings
    #
    basedir		    = /usr
    tmpdir	            = /tmp
    skip-external-locking
    character_set_server    = utf8
    ignore_db_dirs          = lost+found

    #
    # * Fine Tuning
    #
    ft_min_word_len         = 3
    join_buffer_size        = 131072
    key_buffer_size         = 16M
    max_allowed_packet      = 256M
    #max_connections        = 100
    max_heap_table_size     = 16M
    query_cache_type        = OFF
    query_cache_size        = 0
    read_buffer_size        = 131072
    read_rnd_buffer_size    = 262144
    table_open_cache        = 4096
    thread_stack            = 192K
    thread_cache_size       = 8
    #thread_concurrency     = 12
    tmp_table_size          = 16M

    interactive_timeout     = 28800
    net_read_timeout        = $DB_NET_READ_TIMEOUT
    net_write_timeout       = 60
    wait_timeout            = 3600

    #
    # * Slow query log
    #
    slow_query_log_file     = /var/log/mysql/mysql-slow.log
    slow_query_log          = 1
    long_query_time         = 4
    #log_queries_not_using_indexes

    #
    # * InnoDB
    #
    innodb_data_file_path        = ibdata1:10M:autoextend
    innodb_buffer_pool_instances = 1
    innodb_buffer_pool_size      = $DB_INNODB_POOL_SIZE
    innodb_log_file_size         = $DB_INNODB_LOG_SIZE

    [mysqldump]
    quick
    quote-names
    max_allowed_packet	    = 16M

  wsrep.cnf: |
    # Single-instance does not use wsrep
