---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - { port: 80, targetPort: 8888 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: GID, value: "$RAINLOOP_GID" }
        - { name: UID, value: "$RAINLOOP_UID" }
        - { name: LOG_TO_STDOUT, value: "true" }
        image: hardware/rainloop:$VERSION_RAINLOOP
        ports:
        - containerPort: 8888
        volumeMounts:
        - mountPath: /rainloop/data
          name: share
          subPath: $SERVICE_NAME/data
      dnsConfig:
        nameservers: [ $DNS_SERVERS ]
        options:
        - name: ndots
      volumes:
      - name: share
        hostPath: { path: $PATH_SHR }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/client-body-buffer-size: 20m
    nginx.ingress.kubernetes.io/enable-access-log: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
spec:
  rules:
  - host: webmail.$DOMAIN
    http:
      paths:
      - path: /
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
  tls:
  - hosts:
    - webmail.$DOMAIN
    secretName: tls-$SERVICE_NAME
