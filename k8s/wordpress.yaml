---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - port: 80
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: WORDPRESS_DB_HOST, value: $DB_HOST }
        - { name: WORDPRESS_DB_NAME, value: $DB_NAME }
        - { name: WORDPRESS_DB_USER, value: wordpress }
        - { name: TZ, value: $TZ }
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $SERVICE_NAME
              key: WORDPRESS_DB_PASSWORD
        - name: WORDPRESS_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: $SERVICE_NAME
              key: WORDPRESS_AUTH_KEY
        - name: WORDPRESS_SECURE_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: $SERVICE_NAME
              key: WORDPRESS_SECURE_AUTH_KEY
        - name: WORDPRESS_LOGGED_IN_KEY
          valueFrom:
            secretKeyRef:
              name: $SERVICE_NAME
              key: WORDPRESS_LOGGED_IN_KEY
        - name: WORDPRESS_NONCE_KEY
          valueFrom:
            secretKeyRef:
              name: $SERVICE_NAME
              key: WORDPRESS_NONCE_KEY
        - name: WORDPRESS_AUTH_SALT
          valueFrom:
            secretKeyRef:
              name: $SERVICE_NAME
              key: WORDPRESS_AUTH_SALT
        - name: WORDPRESS_SECURE_AUTH_SALT
          valueFrom:
            secretKeyRef:
              name: $SERVICE_NAME
              key: WORDPRESS_SECURE_AUTH_SALT
        - name: WORDPRESS_NONCE_SALT
          valueFrom:
            secretKeyRef:
              name: $SERVICE_NAME
              key: WORDPRESS_NONCE_SALT
        image: wordpress:$VERSION_WORDPRESS
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/local/etc/php/conf.d/local-php.ini
          name: init
          subPath: local-php.ini
        - mountPath: /var/www/html
          name: share
          subPath: $SERVICE_NAME/html
      dnsConfig:
        options:
        - name: use-vc
        - name: ndots
      volumes:
      - name: init
        configMap:
          name: $SERVICE_NAME
      - name: share
        hostPath: { path: $PATH_SHR }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: $SERVICE_NAME
data:
  local-php.ini: |
    upload_max_filesize = 32M
    post_max_size = 40M
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-access-log: "false"
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - $HOST_FQDN
  rules:
  - host: $HOST_FQDN
    http:
      paths:
      - path: /
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-totp
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-url: http://$AUTHELIA_IP/api/verify
    nginx.ingress.kubernetes.io/auth-signin: https://authtotp.$DOMAIN
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - $HOST_FQDN
  rules:
  - host: $HOST_FQDN
    http:
      paths:
      - path: /(wp-login.php|wp-admin)
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
