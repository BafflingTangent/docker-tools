---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io.service: $SERVICE_NAME
  name: $SERVICE_NAME
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: $SERVICE_NAME
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: $SERVICE_NAME
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      serviceAccountName: $SERVICE_NAME
      containers:
      - name: $SERVICE_NAME
        command:
        - /bin/logspout
        - syslog+tcp://$RSYSLOGD_IP:$PORT_RSYSLOGD
        env:
        - name: SYSLOG_FORMAT
          value: rfc3164
        - name: SYSLOG_HOSTNAME
          value: '{{ index .Container.Config.Labels "io.kubernetes.pod.namespace" }}.{{ index .Container.Config.Labels "io.kubernetes.container.name" }}'
        - name: SYSLOG_TAG
          value: '{{ index .Container.Config.Labels "io.kubernetes.pod.name" }}'
        - name: TZ
          value: UTC
        image: gliderlabs/logspout:$VERSION_LOGSPOUT
        resources:
          limits:
            cpu: 500m
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 32Mi
        volumeMounts:
        - name: socket
          mountPath: /var/run/docker.sock
          readOnly: true
      volumes:
      - name: socket
        hostPath:
          path: /var/run/docker.sock
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: $SERVICE_NAME
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $SERVICE_NAME
rules:
- apiGroups:
  - ""
  resources:
  - namespace
  - pods
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: $SERVICE_NAME
roleRef:
  kind: ClusterRole
  name: $SERVICE_NAME
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: $SERVICE_NAME
  namespace: kube-system
