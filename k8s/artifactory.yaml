---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - name: $SERVICE_NAME
    port: 80
    targetPort: 8081
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: DB_HOST, value: $DB_HOST }
        - { name: DB_PASSWORD, value: $DB_PASSWORD }
        - { name: DB_TYPE, value: $DB_TYPE }
        - { name: EXTRA_JAVA_OPTIONS, value: -Xms1g -Xmx4g }
        - { name: TZ, value: $TZ }
        image: docker.bintray.io/jfrog/artifactory-oss:$VERSION_ARTIFACTORY
        ports:
        - containerPort: 8081
        resources:
          limits:
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 1Gi
        volumeMounts:
        - name: data
          mountPath: /var/opt/jfrog/artifactory
          subPath: $SERVICE_NAME/data
        - name: data
          mountPath: /opt/jfrog/artifactory/tomcat/lib/mysql-connector-java-5.1.40-bin.jar
          readOnly: true
          subPath: $SERVICE_NAME/mysql-connector-java-5.1.40.jar
      volumes:
      - name: data
        hostPath: { path: $PATH_SHR }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-access-log: "false"
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - repo.$DOMAIN
  rules:
  - host: repo.$DOMAIN
    http:
      paths:
      - path: /
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-totp
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-url: http://$AUTHELIA_IP/api/verify
    nginx.ingress.kubernetes.io/auth-signin: https://authtotp.$DOMAIN
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - repo.$DOMAIN
  rules:
  - host: repo.$DOMAIN
    http:
      paths:
      - path: /artifactory/webapp/[#]/login
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
      - path: /artifactory/ui/(oauth2/loginRequest|auth/login)
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
