---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - { port: 80, targetPort: 8080 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
---
apiVersion: v1
kind: Service
metadata:
  name: guacd
spec:
  ports:
  - port: 4822
  selector:
    app.kubernetes.io/name: guacd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - { name: GUACD_HOSTNAME, value: $(GUACD_SERVICE_HOST) }
        - { name: GUACD_PORT, value: $(GUACD_SERVICE_PORT) }
        - { name: MYSQL_DATABASE, value: guacamole }
        - { name: MYSQL_HOSTNAME, value: $DB_HOST }
        - { name: MYSQL_USER, value: guacamole_user }
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: guacamole-db-password
              key: guacamole-db-password
        image: guacamole/guacamole:$VERSION_GUACAMOLE
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 768Mi
      dnsConfig:
        nameservers: [ $DNS_SERVERS ]
        options:
        - name: use-vc
        - name: ndots
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: guacd
  name: guacd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: guacd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: guacd
    spec:
      hostname: guacd
      subdomain: $SERVICE_NAME
      containers:
      - name: guacd
        image: guacamole/guacd:$VERSION_GUACAMOLE
        ports:
        - containerPort: 4822
        resources:
          limits:
            memory: 1536Mi
          requests:
            cpu: 100m
            memory: 512Mi
      dnsConfig:
        nameservers: [ $DNS_SERVERS ]
        options:
        - name: use-vc
        - name: ndots
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: guacamole-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/app-root: /guacamole
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/enable-access-log: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Connection ${DOL}http_connection;
      proxy_set_header Upgrade ${DOL}http_upgrade;
spec:
  rules:
  - host: desktop.$DOMAIN
    http:
      paths:
      - path: /
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
  tls:
  - hosts:
    - desktop.$DOMAIN
    secretName: tls-$SERVICE_NAME
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $SERVICE_NAME-totp
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-url: http://$AUTHELIA_IP/api/verify
    nginx.ingress.kubernetes.io/auth-signin: https://authtotp.$DOMAIN
spec:
  tls:
  - secretName: tls-$SERVICE_NAME
    hosts:
    - desktop.$DOMAIN
  rules:
  - host: desktop.$DOMAIN
    http:
      paths:
      - path: /guacamole/\#/login
        backend:
          service:
            name: $SERVICE_NAME
            port:
              number: 80
        pathType: Prefix
