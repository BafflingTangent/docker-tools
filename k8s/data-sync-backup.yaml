---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
spec:
  clusterIP: None
  ports:
  - { port: 22, targetPort: 22 }
  selector:
    app.kubernetes.io/name: $SERVICE_NAME
    release: "0.1"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: $SERVICE_NAME
    release: "0.1"
  name: $SERVICE_NAME
spec:
  replicas: $DATA_SYNC_CLUSTER_SIZE
  selector:
    matchLabels:
      app.kubernetes.io/name: $SERVICE_NAME
      release: "0.1"
  serviceName: $SERVICE_NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: $SERVICE_NAME
        release: "0.1"
    spec:
      containers:
      - name: $SERVICE_NAME
        env:
        - name: PUBKEY1
          valueFrom:
            secretKeyRef:
              name: $DATA_SYNC_SECRET
              key: pubkey1
        - name: PUBKEY2
          valueFrom:
            secretKeyRef:
              name: $DATA_SYNC_SECRET
              key: pubkey2
        - { name: SYNC_INTERVAL, value: "180" }
        - { name: TZ, value: $TZ }
        image: $REGISTRY_URI/data-sync:$VERSION_DATA_SYNC
        ports:
        - containerPort: 22
        resources:
          limits:
            memory: 4096Mi
          requests:
            memory: 256Mi
        volumeMounts:
        - name: archive
          mountPath: /root/.unison
        - name: config
          mountPath: /etc/unison.d/common.prf
          subPath: common.prf
        - mountPath: /etc/ssh
          name: etc
        - mountPath: /var/log/unison
          name: logs
        # Customize your list of mounted volumes here
        - mountPath: /var/data-sync/backup
          name: backup
        - mountPath: /run/secrets/data-sync-sshkey1
          name: sshkeys
          subPath: sshkey1
        - mountPath: /run/secrets/data-sync-sshkey2
          name: sshkeys
          subPath: sshkey2
      imagePullSecrets: [ $IMAGEPULL_SPEC ]
      nodeSelector:
        service.data-sync: allow
      volumes:
      - name: backup
        hostPath: { path: $PATH_BKP }
      - name: config
        configMap:
          name: data-sync
      - name: sshkeys
        secret:
          secretName: $DATA_SYNC_SECRET
      - name: logs
        hostPath: { path: $K8S_VOLUMES_PATH/sync-logs/$SERVICE_NAME }
  volumeClaimTemplates:
  - metadata:
      name: archive
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
  - metadata:
      name: etc
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 500Mi
